%form{ :action => @form_action, :method => "get", :onSubmit => "return confirmAmount();" }
  = hidden_field_tag 'user_id', current_user.id

  %h2 Make a Payment
  %table.lightweight
    %tbody
      %tr
        %th Total cost
        %td.numeric= cents_to_currency @user.get_invoice_total
        %td.smalltext= link_to "Summary", invoice_user_path(@user)
      %tr
        %th Amount paid
        %td.numeric= cents_to_currency @user.amount_paid
        %td.smalltext= link_to "History", ledger_user_path(@user)
      %tr
        %th Balance
        %td.numeric= cents_to_currency @user.balance
      %tr
        %th Payment Amount
        %td.align-right
          $
          %input.align-right{ :type => "text", :size => "6", :name => "amount", :id => "amount" }
      %tr
        %th
        %td.align-right
          %br
          %input{ :type => "submit", :name => "submit", :value => "Continue" }

- if @year.refund_policy
  %h3 Refund Policy
  %p= @year.refund_policy

%br

:javascript

  // Check the payment amount, and warn people who overpay
  function confirmAmount() {

    // Get amount field via jquery
    var a = $('#amount');
    if (a.length !== 1) { return true; }

    // Validate numeric
    if (isNaN(a.val())) {
      alert("Please enter a numeric payment amount");
      return false;
      }

    // Get user balance via interpolation
    var b = parseFloat('#{@user.balance}');

    // Warn people who overpay
    /*
    if (!isNaN(b) && a.val() > b) {
      var msg = "It looks like the amount that you entered is greater";
      msg += " than your account balance.  Are you sure you want to";
      msg += " make a donation?";
      return confirm(msg);
      }
    */

    // Otherwise, everything looks OK.  Submit the form.
    return true;
  }
